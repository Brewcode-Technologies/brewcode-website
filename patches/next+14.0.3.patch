diff --git a/node_modules/next/dist/client/image-component.js b/node_modules/next/dist/client/image-component.js
index 1e99a46..ebd8fd6 100644
--- a/node_modules/next/dist/client/image-component.js
+++ b/node_modules/next/dist/client/image-component.js
@@ -111,29 +111,23 @@ function handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlu
         }
     });
 }
-function getDynamicProps(fetchPriority) {
+function getDynamicProps(fetchpriority) {
     const [majorStr, minorStr] = _react.version.split(".", 2);
     const major = parseInt(majorStr, 10);
     const minor = parseInt(minorStr, 10);
-    if (major > 18 || major === 18 && minor >= 3) {
-        // In React 18.3.0 or newer, we must use camelCase
-        // prop to avoid "Warning: Invalid DOM property".
-        // See https://github.com/facebook/react/pull/25927
-        return {
-            fetchPriority
-        };
+    if (major > 18 || (major === 18 && minor >= 3)) {
+        // In React 18.3.0 or newer, we must use camelCase prop to avoid warning.
+        return { fetchpriority };
     }
-    // In React 18.2.0 or older, we must use lowercase prop
-    // to avoid "Warning: Invalid DOM property".
-    return {
-        fetchpriority: fetchPriority
-    };
+    // In React 18.2.0 or older, we must use lowercase prop to avoid warning.
+    return { fetchpriority };
 }
+
 const ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{
-    let { src, srcSet, sizes, height, width, decoding, className, style, fetchPriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, onLoad, onError, ...rest } = param;
+    let { src, srcSet, sizes, height, width, decoding, className, style, fetchpriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, onLoad, onError, ...rest } = param;
     return /*#__PURE__*/ _react.default.createElement("img", {
         ...rest,
-        ...getDynamicProps(fetchPriority),
+        ...getDynamicProps(fetchpriority),
         // It's intended to keep `loading` before `src` because React updates
         // props in order which causes Safari/Firefox to not lazy load properly.
         // See https://github.com/facebook/react/issues/25883
@@ -217,7 +211,7 @@ function ImagePreload(param) {
         imageSizes: imgAttributes.sizes,
         crossOrigin: imgAttributes.crossOrigin,
         referrerPolicy: imgAttributes.referrerPolicy,
-        ...getDynamicProps(imgAttributes.fetchPriority)
+        ...getDynamicProps(imgAttributes.fetchpriority)
     };
     if (isAppRouter && _reactdom.default.preload) {
         // See https://github.com/facebook/react/pull/26940
